{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,I,EAAM,EACJ,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAAG,SAAS,gBAAgB,CAAC,iB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAC7B,GAAG,CAAC,SAAC,CAFP,EAEc,OAAA,OAAO,EAAG,WAAW,CAAC,OAAO,CAAC,KAAM,I,GAI5C,EAAkB,EAAuB,MAAM,CACnD,SAAC,CAAA,CAAK,CADR,EACgB,OAAA,EAAM,CACpB,EAAA,EAIF,CAAA,SAAS,aAAa,CAAC,qBAAqB,WAAW,CACrD,EAAgB,cAAc,CAAC,SAIjC,IAAM,EAAoB,EAAkB,EAAuB,MAAM,AAIzE,CAAA,SAAS,aAAa,CAAC,uBAAuB,WAAW,CACvD,EAAkB,cAAc,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// creating an arr of population of all countries\nvar countriesPopulationArr = _to_consumable_array(document.querySelectorAll(\".population\")).map(function(el) {\n    return Number(el.textContent.replace(/,/g, \"\"));\n});\n// calculate the total population of all countries\nvar totalPopulation = countriesPopulationArr.reduce(function(acc, val) {\n    return acc + val;\n}, 0);\n// set the total population to the element\ndocument.querySelector(\".total-population\").textContent = totalPopulation.toLocaleString(\"en-Us\");\n// calculate the average population for a country\nvar averagePopulation = totalPopulation / countriesPopulationArr.length;\n// set the average population to the element\ndocument.querySelector(\".average-population\").textContent = averagePopulation.toLocaleString(\"en-Us\");\n\n//# sourceMappingURL=index.d4df1715.js.map\n","'use strict';\n// creating an arr of population of all countries\n\nconst countriesPopulationArr = [\n  ...document.querySelectorAll('.population'),\n].map((el) => Number(el.textContent.replace(/,/g, '')));\n\n// calculate the total population of all countries\n\nconst totalPopulation = countriesPopulationArr.reduce(\n  (acc, val) => acc + val,\n  0,\n);\n// set the total population to the element\n\ndocument.querySelector('.total-population').textContent =\n  totalPopulation.toLocaleString('en-Us');\n\n// calculate the average population for a country\n\nconst averagePopulation = totalPopulation / countriesPopulationArr.length;\n\n// set the average population to the element\n\ndocument.querySelector('.average-population').textContent =\n  averagePopulation.toLocaleString('en-Us');\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","countriesPopulationArr","_to_consumable_array","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","map","el","Number","textContent","replace","totalPopulation","reduce","acc","val","querySelector","toLocaleString","averagePopulation"],"version":3,"file":"index.d4df1715.js.map"}